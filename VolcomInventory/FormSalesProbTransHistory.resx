<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnViewPriceRecon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        fMHgOxxuLPwPZ3pLcd5tseIAAAAASUVORK5CYII=
</value>
  </data>
  <data name="BtnViewInv.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        fMHgOxxuLPwPZ3pLcd5tseIAAAAASUVORK5CYII=
</value>
  </data>
</root>