<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="LargeImageCollection.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v15.1" name="DevExpress.Utils.v15.1, Version=15.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="LargeImageCollection.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v15.1" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpEZXZFeHByZXNzLlV0aWxzLnYxNS4xLCBWZXJzaW9uPTE1LjEu
        Ny4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI4OGQxNzU0ZDcwMGU0OWEMAwAAAFFT
        eXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAAChEZXZFeHByZXNzLlV0aWxzLkltYWdlQ29sbGVjdGlvblN0
        cmVhbWVyAgAAAAlJbWFnZVNpemUERGF0YQQHE1N5c3RlbS5EcmF3aW5nLlNpemUDAAAAAgIAAAAF/P//
        /xNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAV3aWR0aAZoZWlnaHQAAAgIAwAAABgAAAAYAAAACQUAAAAP
        BQAAAB4VAAACKQMAAIlQTkcNChoKAAAADUlIRFIAAAAYAAAAGAgGAAAA4Hc9+AAAAARnQU1BAACxjwv8
        YQUAAALgSURBVEhLtZTtS1NhGMZn9mov2Jc0zaEDmVKCgZGQkopgqAwtyhAkifoQRF/8FmRuO+pq1qFE
        slhtZRQhZkpBTvema05nrkzLinyhD31c/8HdfZ+XdTafjY3ogt9hPOe6r+t5HsZRxVP72yMViLXLUb56
        Z0oHD2dbBHq9J8HkrFyld0ixZE9cOJSLuPp8jfD661WYXDeDY0UP4yvtYdxrJrB/56DffxYM9mMumpHG
        4wuNDd3O8tDQ0mV4860NXiw2w9OFBibPFk7Bq+VLMPKlDXo8NSGalWLYQkNFt/M4DC5egIGPDWCZr0wI
        a7AGBpfOwy3PCaAMKU4UAAjQEY0TR0NPPpyG+3Nl0BcoSRpbUAdmdzWd5O91KQqG+2aq4O5MMfD+wg0M
        fj6HNlHzvx4zPUR/oBo6xkqtUrxYIOzeUYSGg2D25TKJFssjogHOeZiuSjwFeqmA73RrwOTNikm0WB4Z
        yqJMtEkFYyWurqkMiEe0WB4llIk2sUA/UQicOyOCXn+JEJSIRpevbJinTJRcoAW9IxPZFyZZKWcNjpzI
        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
        LUTnAAAAAElFTkSuQmCCCw==
</value>
  </data>
</root>